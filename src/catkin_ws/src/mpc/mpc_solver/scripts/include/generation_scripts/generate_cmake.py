import datetime
import os
import sys

# def write_model_header(settings, model):


def generate_cmake_files(solver_names, module_settings, system, pkg_path):

    # Path for the cmake file
    cmake_path = pkg_path + "/src/" + system + "/sources_list.cmake"
    cmake_globalvars_path = pkg_path + "/src/cmake_globalvars.cmake"

    if not os.path.exists(pkg_path + "/src/" + system):
        os.makedirs(pkg_path + "/src/" + system)

    # Show the file path
    print("Placing cmake file in: {}\n".format(cmake_path))
    print("Placing cmake global vars file in: {}\n".format(cmake_globalvars_path))

    # Date and Time
    now = datetime.datetime.now()
    dt_string = now.strftime("%d/%m/%Y %H:%M:%S")

    ## Store the parameters for the files
    # Solver states
    sources = "\tsrc/" + system + "/" + system + "_solver_interface.cpp \n"
    headers = "\tinclude/mpc_solver/" + system + "/" + system + "_solver_interface.h \n"
    solver_libs = ""
    modules = ""
    modules_list = []
    index = 0
    for name in solver_names:
        solver_libs = (
            solver_libs
            + "\t${PROJECT_SOURCE_DIR}/include/mpc_solver/"
            + system
            + "/"
            + name
            + "FORCESNLPsolver/lib/lib"
            + name
            + "FORCESNLPsolver.so \n"
        )
        sources = sources + "\tsrc/" + system + "/" + name + "solver.cpp \n"
        headers = (
            headers + "\tinclude/mpc_solver/" + system + "/" + name + "solver.h \n"
        )

        # Modules
        module_names = ""
        for module in module_settings[index].modules.modules:
            if module.with_params:
                if module.module_name not in modules_list:
                    modules_list.append(module.module_name)
                    module_names = module_names + ' "' + module.module_name + '"'

        modules = modules + module_names
        index = index + 1

    # Open the file
    cmake_file = open(cmake_path, "w")

    cmake_file.write(
        "# This file is automatically generated \n"
        + "# Time of creation:"
        + dt_string
        + "\n"
        + "set(LIBRARY_SOURCES ${LIBRARY_SOURCES} \n"
        + sources
        + "\n"
        + ") \n\n"
        + "set(LIBRARY_HEADERS ${LIBRARY_HEADERS} \n"
        + headers
        + "\n"
        + ") \n\n"
        + "set(SOLVER_LIBS ${SOLVER_LIBS} \n"
        + solver_libs
        + "\n"
        + ") \n"
    )
    cmake_file.close()

    # Open the file
    cmake_globalvars_file = open(cmake_globalvars_path, "w")

    cmake_globalvars_file.write(
        "# This file is automatically generated \n"
        + "# Time of creation:"
        + dt_string
        + "\n"
        + 'set(SYSTEM "'
        + system
        + '") \n'
        + 'set(LAYERS "'
        + str(len(solver_names))
        + '") \n'
        + "list(APPEND MODULES "
        + modules
        + ")\n"
    )

    cmake_globalvars_file.close()
